<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                             http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                             http://www.springframework.org/schema/context
                             http://www.springframework.org/schema/context/spring-context-3.0.xsd
                             http://www.springframework.org/schema/tx
                             http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                             http://www.springframework.org/schema/aop
                             http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                             ">
	  
	
	    <!-- Redis 连接池 -->
	    <bean id="jedisPool" class="redis.clients.jedis.JedisPoolConfig">
	        <property name="maxTotal" value="${redis.pool.maxActive}" />
	        <property name="maxIdle" value="${redis.pool.maxIdle}" />
	        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	        <property name="testOnReturn" value="${redis.pool.testOnReturn}" />
	        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
	    </bean>
	
		<!-- 生产环境配置开始项 -->
		<!-- Redis集群配置  -->
	<!--      <bean id="redisClusterConfig" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
	        <property name="maxRedirects" value="6"></property>
	        <property name="clusterNodes">
	            <set>
	                <bean class="org.springframework.data.redis.connection.RedisNode">
	                    <constructor-arg name="host" value="${master1.redis.ip}"></constructor-arg>
	                    <constructor-arg name="port" value="${master1.redis.port}"></constructor-arg>
	                </bean>
	
	                <bean class="org.springframework.data.redis.connection.RedisNode">
	                    <constructor-arg name="host" value="${master2.redis.ip}"></constructor-arg>
	                    <constructor-arg name="port" value="${master2.redis.port}"></constructor-arg>
	                </bean>
	                <bean class="org.springframework.data.redis.connection.RedisNode">
	                    <constructor-arg name="host" value="${master3.redis.ip}"></constructor-arg>
	                    <constructor-arg name="port" value="${master3.redis.port}"></constructor-arg>
	                </bean>
	                <bean class="org.springframework.data.redis.connection.RedisNode">
	                    <constructor-arg name="host" value="${replica1.redis.ip}"></constructor-arg>
	                    <constructor-arg name="port" value="${replica1.reids.port}"></constructor-arg>
	                </bean>
	                 <bean class="org.springframework.data.redis.connection.RedisNode">
	                    <constructor-arg name="host" value="${replica2.redis.ip}"></constructor-arg>
	                    <constructor-arg name="port" value="${replica2.reids.port}"></constructor-arg>
	                </bean>
	                 <bean class="org.springframework.data.redis.connection.RedisNode">
	                    <constructor-arg name="host" value="${replica3.redis.ip}"></constructor-arg>
	                    <constructor-arg name="port" value="${replica3.reids.port}"></constructor-arg>
	                </bean>
	            </set>
	        </property>
	    </bean> 
		
	    <bean id="redisConnFactory"
	        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	        <constructor-arg name="clusterConfig" ref="redisClusterConfig" />
	        <property name="timeout" value="${redis.timeout}" />
	        <property name="poolConfig" ref="jedisPool" />
	    </bean> -->
       <!-- 生产环境配置结束 -->
       
       <!-- 测试环境配置开始 -->
        <bean id="redisConnFactory"
	        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	        <property name="hostName" value="${redis.ip}"/>
	        <property name="port" value="${redis.port}"/>
	        <property name="password" value="${redis.password}"/>
	        <property name="timeout" value="${redis.timeout}" />
	        <property name="poolConfig" ref="jedisPool" />
	    </bean>
       <!-- 测试环境配置结束 -->
        	
	    <!-- redis 操作对象 -->
	    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	        <property name="connectionFactory" ref="redisConnFactory" />
	    </bean>
	    <!-- 加载redis.propertis end -->
	    
	    <!--   如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast to String -->   
   		 <bean class="org.springframework.data.redis.core.StringRedisTemplate">
	    	<property name="connectionFactory" ref="redisConnFactory" />
	    	<property name="valueSerializer">
	           <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
	         </property>
    	</bean>
</beans>